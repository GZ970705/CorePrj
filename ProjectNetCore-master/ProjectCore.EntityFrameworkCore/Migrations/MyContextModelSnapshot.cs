// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectCore.EntityFrameworkCore;

namespace ProjectCore.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.RoleInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatDateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("CreateUserName")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("RoleDescription")
                        .HasMaxLength(1000);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("RoleShot");

                    b.Property<string>("RoleType")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("RoleInfo");
                });

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.UserGroupInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatDateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("CreateUserName")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("UserGroupName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UserGroupInfo");
                });

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.UserGroupUnRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserGroupId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserGroupId");

                    b.ToTable("UserGroupUnRoleInfo");
                });

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatDateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("CreateUserName")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDisable");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UserPhone")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.UserUnGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("UserGroupId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserUnGroupInfo");
                });

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.UserUnRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserUnRoleInfo");
                });

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.UserGroupUnRole", b =>
                {
                    b.HasOne("ProjectCore.Domain.Model.Entity.RoleInfo", "RoleInfo")
                        .WithMany("UserGroupUnRoleList")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectCore.Domain.Model.Entity.UserGroupInfo", "UserGroupInfo")
                        .WithMany("UserGroupUnRoleList")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.UserInfo", b =>
                {
                    b.OwnsOne("ProjectCore.Domain.Model.ValueObject.Address", "Address", b1 =>
                        {
                            b1.Property<Guid?>("UserInfoId");

                            b1.Property<string>("AddressDetails")
                                .HasMaxLength(200);

                            b1.Property<string>("City")
                                .HasMaxLength(25);

                            b1.Property<string>("County")
                                .HasMaxLength(25);

                            b1.Property<bool>("IsDeleted");

                            b1.Property<string>("Province")
                                .HasMaxLength(25);

                            b1.ToTable("UserInfo");

                            b1.HasOne("ProjectCore.Domain.Model.Entity.UserInfo")
                                .WithOne("Address")
                                .HasForeignKey("ProjectCore.Domain.Model.ValueObject.Address", "UserInfoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.UserUnGroup", b =>
                {
                    b.HasOne("ProjectCore.Domain.Model.Entity.UserGroupInfo", "UserGroupInfo")
                        .WithMany("UserUnGroupList")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectCore.Domain.Model.Entity.UserInfo", "UserInfo")
                        .WithMany("UserUnGroupList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectCore.Domain.Model.Entity.UserUnRole", b =>
                {
                    b.HasOne("ProjectCore.Domain.Model.Entity.RoleInfo", "RoleInfo")
                        .WithMany("UserUnRoleList")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectCore.Domain.Model.Entity.UserInfo", "UserInfo")
                        .WithMany("UserUnRoleList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
